!function(e){var r={};function n(o){if(r[o])return r[o].exports;var t=r[o]={i:o,l:!1,exports:{}};return e[o].call(t.exports,t,t.exports,n),t.l=!0,t.exports}n.m=e,n.c=r,n.d=function(e,r,o){n.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:o})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,r){if(1&r&&(e=n(e)),8&r)return e;if(4&r&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&r&&"string"!=typeof e)for(var t in e)n.d(o,t,function(r){return e[r]}.bind(null,t));return o},n.n=function(e){var r=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(r,"a",r),r},n.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},n.p="",n(n.s="./client/client.ts")}({"./client/client.ts":
/*!**************************!*\
  !*** ./client/client.ts ***!
  \**************************/
/*! no static exports found */function(module,exports){eval('const debug = true;\r\nsetTick(() => {\r\n    // Turn off emergency/police/ems dispatch every frame\r\n    for (let i = 0; i < 25; i++) {\r\n        EnableDispatchService(i, false);\r\n    }\r\n    // Turn off wanted level\r\n    ClearPlayerWantedLevel(PlayerId());\r\n});\r\nRegisterCommand("tpm", () => {\r\n    TeleportToMarker();\r\n    emitNet("ft-core:tpm");\r\n}, false);\r\nfunction TeleportToMarker() {\r\n    const marker = GetFirstBlipInfoId(8);\r\n    if (DoesBlipExist(marker)) {\r\n        const markerCoords = GetBlipInfoIdCoord(marker);\r\n        debugLog("Teleporting to marker.");\r\n        TeleportToCoords(markerCoords[0], markerCoords[1]);\r\n    }\r\n    else {\r\n        debugLog("No marker found.");\r\n    }\r\n}\r\nfunction TeleportToCoords(x, y) {\r\n    SetPedCoordsKeepVehicle(PlayerPedId(), x, y, 0);\r\n    setTimeout(() => { TeleportFindZ(x, y); }, 1);\r\n}\r\nfunction TeleportFindZ(x, y) {\r\n    for (let height = 10000; height > 0; height--) {\r\n        const groundCoords = GetGroundZFor_3dCoord(x, y, height, false);\r\n        if (groundCoords[0]) {\r\n            debugLog(height.toString());\r\n            SetPedCoordsKeepVehicle(PlayerPedId(), x, y, groundCoords[1]);\r\n            return;\r\n        }\r\n    }\r\n    debugLog("Couldn\'t find ground, trying again");\r\n    setTimeout(() => { TeleportFindZ(x, y); }, 100);\r\n}\r\nfunction debugLog(message) {\r\n    if (debug) {\r\n        console.log(message);\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack:///./client/client.ts?')}});